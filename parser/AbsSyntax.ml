(* File generated by the BNF Converter (bnfc 2.9.5). *)

type stellaIdent = StellaIdent of string
and extensionName = ExtensionName of string
and memoryAddress = MemoryAddress of string
and program = AProgram of languageDecl * extension list * decl list
and languageDecl = LanguageCore
and extension = AnExtension of extensionName list

and decl =
  | DeclFun of
      annotation list
      * stellaIdent
      * paramDecl list
      * returnType
      * throwType
      * decl list
      * expr
  | DeclFunGeneric of
      annotation list
      * stellaIdent
      * stellaIdent list
      * paramDecl list
      * returnType
      * throwType
      * decl list
      * expr
  | DeclTypeAlias of stellaIdent * typeT
  | DeclExceptionType of typeT
  | DeclExceptionVariant of stellaIdent * typeT

and localDecl = ALocalDecl of decl
and annotation = InlineAnnotation
and paramDecl = AParamDecl of stellaIdent * typeT
and returnType = NoReturnType | SomeReturnType of typeT
and throwType = NoThrowType | SomeThrowType of typeT list

and typeT =
  | TypeFun of typeT list * typeT
  | TypeForAll of stellaIdent list * typeT
  | TypeRec of stellaIdent * typeT
  | TypeSum of typeT * typeT
  | TypeTuple of typeT list
  | TypeRecord of recordFieldType list
  | TypeVariant of variantFieldType list
  | TypeList of typeT
  | TypeBool
  | TypeNat
  | TypeUnit
  | TypeTop
  | TypeBottom
  | TypeRef of typeT
  | TypeVar of stellaIdent

and matchCase = AMatchCase of pattern * expr
and optionalTyping = NoTyping | SomeTyping of typeT
and patternData = NoPatternData | SomePatternData of pattern
and exprData = NoExprData | SomeExprData of expr

and pattern =
  | PatternVariant of stellaIdent * patternData
  | PatternInl of pattern
  | PatternInr of pattern
  | PatternTuple of pattern list
  | PatternRecord of labelledPattern list
  | PatternList of pattern list
  | PatternCons of pattern * pattern
  | PatternFalse
  | PatternTrue
  | PatternUnit
  | PatternInt of int
  | PatternSucc of pattern
  | PatternVar of stellaIdent

and labelledPattern = ALabelledPattern of stellaIdent * pattern
and binding = ABinding of stellaIdent * expr

and expr =
  | Sequence of expr * expr
  | Assign of expr * expr
  | If of expr * expr * expr
  | Let of patternBinding list * expr
  | LetRec of patternBinding list * expr
  | TypeAbstraction of stellaIdent list * expr
  | LessThan of expr * expr
  | LessThanOrEqual of expr * expr
  | GreaterThan of expr * expr
  | GreaterThanOrEqual of expr * expr
  | Equal of expr * expr
  | NotEqual of expr * expr
  | TypeAsc of expr * typeT
  | TypeCast of expr * typeT
  | Abstraction of paramDecl list * expr
  | Variant of stellaIdent * exprData
  | Match of expr * matchCase list
  | List of expr list
  | Add of expr * expr
  | Subtract of expr * expr
  | LogicOr of expr * expr
  | Multiply of expr * expr
  | Divide of expr * expr
  | LogicAnd of expr * expr
  | Ref of expr
  | Deref of expr
  | Application of expr * expr list
  | TypeApplication of expr * typeT list
  | DotRecord of expr * stellaIdent
  | DotTuple of expr * int
  | Tuple of expr list
  | Record of binding list
  | ConsList of expr * expr
  | Head of expr
  | IsEmpty of expr
  | Tail of expr
  | Panic
  | Throw of expr
  | TryCatch of expr * pattern * expr
  | TryWith of expr * expr
  | Inl of expr
  | Inr of expr
  | Succ of expr
  | LogicNot of expr
  | Pred of expr
  | IsZero of expr
  | Fix of expr
  | NatRec of expr * expr * expr
  | Fold of typeT * expr
  | Unfold of typeT * expr
  | ConstTrue
  | ConstFalse
  | ConstUnit
  | ConstInt of int
  | ConstMemory of memoryAddress
  | Var of stellaIdent

and patternBinding = APatternBinding of pattern * expr
and variantFieldType = AVariantFieldType of stellaIdent * optionalTyping
and recordFieldType = ARecordFieldType of stellaIdent * typeT
and typing = ATyping of expr * typeT
